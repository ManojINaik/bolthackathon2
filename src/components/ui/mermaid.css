/* Mermaid Class Styles */
.classPurple rect {
  fill: #9163CB !important;
  stroke: #6D4A9C !important;
}

.classPurple .nodeLabel {
  color: white !important;
  fill: white !important;
}

.classGreen rect {
  fill: #4CAF50 !important;
  stroke: #388E3C !important;
}

.classGreen .nodeLabel {
  color: white !important;
  fill: white !important;
}

.classYellow rect {
  fill: #FFC107 !important;
  stroke: #FFA000 !important;
}

.classBlue rect {
  fill: #2196F3 !important;
  stroke: #1976D2 !important;
}

.classBlue .nodeLabel {
  color: white !important;
  fill: white !important;
}

.classOrange rect {
  fill: #FF9800 !important;
  stroke: #F57C00 !important;
}

/* Make the diagram container support zooming and panning */
.diagram-container {
  overflow: hidden;
  position: relative;
  background-color: #fafafa;
  border-radius: 0.375rem;
  border: 1px solid hsl(var(--border));
}

.diagram-container:hover {
  background-color: hsl(var(--muted) / 0.3);
}

/* Make the SVG responsive */
.mermaid-render-area svg {
  max-width: 100% !important;
  height: auto !important;
  display: block !important;
  margin: 0 auto !important;
  transform-origin: center center;
}

/* Make sure the container is visible */
.mermaid-diagram-wrapper {
  width: 100%;
  min-height: 400px; /* Increased from 200px */
  overflow: visible;
  position: relative;
  padding: 1rem 0;
  background-color: transparent;
}

.mermaid-render-area {
  width: 100%;
  min-height: 400px; /* Increased from 200px */
  position: relative;
  background-color: transparent;
}

/* Ensure the mermaid container gets proper dimensions */
.mermaid {
  width: 100%;
  min-height: 400px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: transparent !important;
}

/* Force SVG visibility and override prose styles */
.mermaid svg {
  background-color: transparent !important;
  width: 100% !important;
  height: auto !important;
  min-height: 400px !important;
  display: block !important;
  margin: 0 !important;
  max-width: none !important;
}

/* Override prose styles for mermaid text elements */
.prose .mermaid svg text,
.prose .mermaid svg tspan,
.mermaid svg text,
.mermaid svg tspan {
  fill: hsl(var(--foreground)) !important;
  font-family: inherit !important;
  font-size: 14px !important;
  color: hsl(var(--foreground)) !important;
  margin: 0 !important;
  padding: 0 !important;
  line-height: 1 !important;
}

/* Override prose styles for mermaid paths */
.prose .mermaid svg path,
.mermaid svg path {
  stroke: hsl(var(--foreground)) !important;
  stroke-width: 2px !important;
  fill: none !important;
  margin: 0 !important;
}

/* Override prose styles for mermaid shapes */
.prose .mermaid svg rect,
.prose .mermaid svg circle,
.prose .mermaid svg ellipse,
.prose .mermaid svg polygon,
.mermaid svg rect,
.mermaid svg circle,
.mermaid svg ellipse,
.mermaid svg polygon {
  fill: hsl(var(--primary)) !important;
  stroke: hsl(var(--border)) !important;
  stroke-width: 2px !important;
  margin: 0 !important;
}

/* Prevent prose from affecting mermaid containers */
.prose .mermaid-diagram-wrapper,
.prose .mermaid-render-area,
.prose .mermaid {
  all: revert !important;
  background-color: transparent !important;
  margin: 0 !important;
  padding: 0 !important;
  max-width: none !important;
  width: 100% !important;
}

/* Override any prose max-width constraints */
.prose .mermaid-diagram-wrapper {
  max-width: none !important;
  width: 100% !important;
}

/* Ensure mermaid elements don't inherit prose typography */
.mermaid * {
  font-family: inherit !important;
  line-height: 1 !important;
  margin: 0 !important;
  padding: 0 !important;
}

/* Specific fixes for dark mode prose */
.dark .prose .mermaid svg text,
.dark .prose .mermaid svg tspan {
  fill: hsl(var(--foreground)) !important;
  color: hsl(var(--foreground)) !important;
}

.dark .prose .mermaid svg path {
  stroke: hsl(var(--foreground)) !important;
}

/* Style zoom controls */
.zoom-controls {
  padding: 0.5rem;
  background-color: hsl(var(--background) / 0.8);
  backdrop-filter: blur(4px);
  border-radius: 0.375rem;
  display: flex;
  align-items: center;
  position: relative;
  z-index: 10;
  border: 1px solid hsl(var(--border));
}

.zoom-controls button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
}

/* Style for edges */
.edgePath .path {
  stroke-width: 2px !important;
  stroke: #555 !important;
}

/* Improve edge markers */
.edgeLabel {
  background-color: transparent !important;
}

/* Base node styling */
.node rect, 
.node circle, 
.node ellipse, 
.node polygon, 
.node path {
  stroke-width: 2px !important;
}

.nodeLabel {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', 
    Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif !important;
  font-weight: 500 !important;
  color: inherit !important;
} 